server.port=9000
spring.application.name=config-server
server.servlet.context-path=/config

management.endpoints.web.exposure.include=health,busrefresh

spring.profiles.active=native
spring.cloud.config.server.native.search-locations[0]=classpath:/configurations/discovery-service
spring.cloud.config.server.native.search-locations[1]=classpath:/configurations/gateway-service
spring.cloud.config.server.native.search-locations[2]=classpath:/configurations/microservices/auth-service
spring.cloud.config.server.native.search-locations[3]=classpath:/configurations/microservices/incident-service
spring.cloud.config.server.native.search-locations[4]=classpath:/configurations/microservices/moderation-service
spring.cloud.config.server.native.search-locations[5]=classpath:/configurations/microservices/analytics-service

# Github configuration (make appropriate folder structure like in resources/)
#spring.profiles.active=git
git.webhook.secret=${GITHUB_WEBHOOK_SECRET}
#spring.cloud.config.server.git.uri=${GITHUB_URI}
#spring.cloud.config.server.git.default-label=main
#spring.cloud.config.server.git.username=${GITHUB_USERNAME}
#spring.cloud.config.server.git.password=${GITHUB_PAT}
#spring.cloud.config.server.git.search-paths[0]=configurations/discovery-service
#spring.cloud.config.server.git.search-paths[1]=configurations/gateway-service
#spring.cloud.config.server.git.search-paths[2]=configurations/microservices/auth-service
#spring.cloud.config.server.git.search-paths[3]=configurations/microservices/incident-service
#spring.cloud.config.server.git.search-paths[4]=configurations/microservices/moderation-service
#spring.cloud.config.server.git.search-paths[5]=configurations/microservices/analytics-service

spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

eureka.instance.hostname=${DISCOVERY_HOSTNAME:localhost}
eureka.instance.port=9001
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${eureka.instance.port}/eureka


# HashiCorp config
spring.config.import=vault://
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=${HASHICORP_VAULT_ROOT_TOKEN}
spring.cloud.vault.uri=${VAULT_URI:http://localhost:8200}
spring.cloud.vault.kv.backend=secretsKV
# Mapira na secret/pisio
spring.cloud.vault.kv.default-context=pisio
