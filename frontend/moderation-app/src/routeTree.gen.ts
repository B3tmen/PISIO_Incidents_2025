/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as Main_layoutRouteImport } from './routes/_main_layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as Main_layoutLoginRouteImport } from './routes/_main_layout/login'
import { Route as Main_layoutModerationIndexRouteImport } from './routes/_main_layout/moderation/index'
import { Route as Main_layoutIncidentsIndexRouteImport } from './routes/_main_layout/incidents/index'

const Main_layoutRoute = Main_layoutRouteImport.update({
  id: '/_main_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const Main_layoutLoginRoute = Main_layoutLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => Main_layoutRoute,
} as any)
const Main_layoutModerationIndexRoute =
  Main_layoutModerationIndexRouteImport.update({
    id: '/moderation/',
    path: '/moderation/',
    getParentRoute: () => Main_layoutRoute,
  } as any)
const Main_layoutIncidentsIndexRoute =
  Main_layoutIncidentsIndexRouteImport.update({
    id: '/incidents/',
    path: '/incidents/',
    getParentRoute: () => Main_layoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof Main_layoutLoginRoute
  '/incidents': typeof Main_layoutIncidentsIndexRoute
  '/moderation': typeof Main_layoutModerationIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof Main_layoutLoginRoute
  '/incidents': typeof Main_layoutIncidentsIndexRoute
  '/moderation': typeof Main_layoutModerationIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_main_layout': typeof Main_layoutRouteWithChildren
  '/_main_layout/login': typeof Main_layoutLoginRoute
  '/_main_layout/incidents/': typeof Main_layoutIncidentsIndexRoute
  '/_main_layout/moderation/': typeof Main_layoutModerationIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/incidents' | '/moderation'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/incidents' | '/moderation'
  id:
    | '__root__'
    | '/'
    | '/_main_layout'
    | '/_main_layout/login'
    | '/_main_layout/incidents/'
    | '/_main_layout/moderation/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  Main_layoutRoute: typeof Main_layoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main_layout': {
      id: '/_main_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof Main_layoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_main_layout/login': {
      id: '/_main_layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof Main_layoutLoginRouteImport
      parentRoute: typeof Main_layoutRoute
    }
    '/_main_layout/moderation/': {
      id: '/_main_layout/moderation/'
      path: '/moderation'
      fullPath: '/moderation'
      preLoaderRoute: typeof Main_layoutModerationIndexRouteImport
      parentRoute: typeof Main_layoutRoute
    }
    '/_main_layout/incidents/': {
      id: '/_main_layout/incidents/'
      path: '/incidents'
      fullPath: '/incidents'
      preLoaderRoute: typeof Main_layoutIncidentsIndexRouteImport
      parentRoute: typeof Main_layoutRoute
    }
  }
}

interface Main_layoutRouteChildren {
  Main_layoutLoginRoute: typeof Main_layoutLoginRoute
  Main_layoutIncidentsIndexRoute: typeof Main_layoutIncidentsIndexRoute
  Main_layoutModerationIndexRoute: typeof Main_layoutModerationIndexRoute
}

const Main_layoutRouteChildren: Main_layoutRouteChildren = {
  Main_layoutLoginRoute: Main_layoutLoginRoute,
  Main_layoutIncidentsIndexRoute: Main_layoutIncidentsIndexRoute,
  Main_layoutModerationIndexRoute: Main_layoutModerationIndexRoute,
}

const Main_layoutRouteWithChildren = Main_layoutRoute._addFileChildren(
  Main_layoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  Main_layoutRoute: Main_layoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
